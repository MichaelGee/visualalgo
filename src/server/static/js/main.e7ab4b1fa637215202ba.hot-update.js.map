{"version":3,"sources":["webpack:///./src/client/app.tsx","webpack:///./src/client/index.tsx"],"names":[],"mappings":"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","file":"main.e7ab4b1fa637215202ba.hot-update.js","sourcesContent":["import Grid from '@app/client/containers/grid';\nimport Axios from 'axios';\nimport * as React from 'react';\nimport { hot } from 'react-hot-loader';\nimport withStyles, { WithStyles } from 'react-jss';\nimport { debounce } from 'ts-debounce';\n\ninterface IState {\n    limitNumber: number;\n    grids: number[];\n    primes: number[];\n    medians: number[];\n}\n\nconst styles = {\n    container: {\n        width: '80%',\n        padding: '20px',\n        maxWidth: '630px',\n    },\n    controlContainer: {\n        padding: '10px 0px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        margin: '30px 0px',\n        borderTop: '1px solid rgba(0,0,0, 0.2);',\n        borderBottom: '1px solid rgba(0,0,0, 0.2);',\n    },\n    numberInput: {\n        width: '300px',\n        height: '38px',\n        paddingLeft: '10px',\n        borderRadius: '10px',\n        fontSize: '1.2em',\n        border: '2px solid #f1f1f1;',\n    },\n    primeTag: {\n        width: '80px',\n        height: '25px',\n        backgroundColor: '#54a0ff',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#fff',\n        fontSize: '0.8em',\n        fontWeight: 'bold',\n        borderRadius: '15px',\n    },\n    medianTag: {\n        width: '80px',\n        height: '25px',\n        backgroundColor: '#10ac84',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#fff',\n        fontSize: '0.8em',\n        fontWeight: 'bold',\n        borderRadius: '15px',\n    },\n    numberInputLabel: {\n        fontSize: '0.8em',\n        display: 'block',\n    },\n    numbersDisplay: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '10px 0px',\n    },\n};\n\ntype Props = WithStyles<typeof styles>;\n\nclass App extends React.Component<Props, IState> {\n    public state: IState = {\n        limitNumber: 0,\n        grids: [],\n        primes: [],\n        medians: [],\n    };\n\n    public render() {\n        const { grids, limitNumber, medians, primes } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <>\n                <div className={classes.container}>\n                    <h2>Sieve of Eratosthenes</h2>\n                    <p>In mathematics, the Sieve of Eratosthenes is a simple, ancient algorithm for <br /> finding all prime numbers up to any given limit.</p>\n                    <div className={classes.controlContainer}>\n                        <form>\n                            <label htmlFor=\"limitNumber\" className={classes.numberInputLabel}>Enter a number</label>\n                            <br />\n                            <input\n                                type=\"number\"\n                                id=\"limitNumber\"\n                                name=\"limitNumber\"\n                                value={limitNumber}\n                                min={0}\n                                className={classes.numberInput}\n                                onChange={this.handleNumberChange}\n                            />\n                        </form>\n                        <div className={classes.primeTag}>Prime</div>\n                        <div className={classes.medianTag}>Median</div>\n                    </div>\n                    <div className={classes.numbersDisplay}>\n                        <pre>Primes: {JSON.stringify(primes)}</pre>\n                        <pre>Medians: {JSON.stringify(medians)}</pre>\n                    </div>\n                    <Grid grids={grids} medians={medians} primes={primes}  />\n                </div>\n            </>\n        );\n    }\n\n    private fetchPrimeAndMedian = async (limitNumber) => {\n        const { data: { median, primes } } = await Axios.get(`/prime/${limitNumber}/median`);\n        return [ median, primes ];\n    };\n\n    private handleNumberChange = async (e: React.FormEvent<HTMLInputElement>) => {\n        const limitNumber = Number(e.currentTarget.value);\n\n        const grids = [];\n\n        for (let i = 0; i < limitNumber; i++) {\n            grids.push(i + 1);\n        }\n\n        if (limitNumber < 3) {\n            return this.setState({\n                limitNumber,\n                grids: [],\n                primes: [],\n                medians: [],\n            });\n        }\n\n        const [median, primes] = await this.fetchPrimeAndMedian(limitNumber);\n\n        this.setState({\n            limitNumber,\n            grids,\n            primes,\n            medians: median,\n        });\n    }\n}\n\nexport default hot(module)(withStyles(styles)(App));\n","import App from './app';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {JssProvider} from 'react-jss';\n\nconst render = (Component) => {\n    ReactDOM.hydrate(<Component />, document.getElementById('app'));\n};\n\nif (module.hot) {\n    module.hot.accept('./app', () => {\n        render(require('./app').default);\n    });\n}\n\nif (window) {\n    window.onload = () => {\n        const ssStyles = document.getElementById('server-side-styles');\n        ssStyles.parentNode.removeChild(ssStyles);\n        render(App);\n    };\n}\n"],"sourceRoot":""}